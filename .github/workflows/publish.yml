name: Build and Publish to PyPI

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        type: string

permissions:
  contents: read

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine

    - name: Extract version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          VERSION="${{ github.event.inputs.version }}"
        elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION=$(python -c "from kubiya_workflow_sdk import __version__; print(__version__)")
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Publishing version: $VERSION"

    - name: Update version in files
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        # Update pyproject.toml
        sed -i "s/version = \".*\"/version = \"$VERSION\"/" pyproject.toml
        # Update __version__.py
        sed -i "s/__version__ = \".*\"/__version__ = \"$VERSION\"/" kubiya_workflow_sdk/__version__.py

    - name: Build package
      run: |
        python -m build

    - name: Verify package
      run: |
        python -m twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@v1.12.4
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

  check-package:
    name: Check package installation from PyPI
    needs: publish-pypi
    runs-on: ubuntu-latest

    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Test package installation
      run: |
        python -m pip install --upgrade pip
        python -m pip install -U kubiya-workflow-sdk
        python -c "import kubiya_workflow_sdk; print(kubiya_workflow_sdk.__version__)" 

  publish-test-pypi:
    name: Publish to Test PyPI
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@v1.12.4
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/ 