[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "kubiya-workflow-sdk"
version = "0.1.0"
description = "SDK for building and managing Kubiya workflows"
authors = ["Kubiya Team <support@kubiya.ai>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/kubiya-ai/workflow-sdk"
repository = "https://github.com/kubiya-ai/workflow-sdk"
documentation = "https://docs.kubiya.ai/workflow-sdk"
keywords = ["kubiya", "workflow", "sdk", "automation", "ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
packages = [{include = "kubiya_workflow_sdk"}]
include = ["kubiya_workflow_sdk/py.typed"]

[tool.poetry.dependencies]
python = "^3.9"
pydantic = "^2.0.0"
httpx = "^0.24.0"
aiohttp = "^3.8.0"
python-dotenv = "^1.0.0"
click = "^8.0.0"
rich = "^13.0.0"
PyYAML = "^6.0"
requests = "^2.25.0"

# Server dependencies (optional)
fastapi = {version = "^0.100.0", optional = true}
uvicorn = {version = "^0.23.0", extras = ["standard"], optional = true}
websockets = {version = "^11.0", optional = true}
sse-starlette = {version = "^1.6.0", optional = true}
python-multipart = {version = "^0.0.6", optional = true}

# ADK dependencies (optional)
google-generativeai = {version = "^0.8.0", optional = true}
google-genai = {version = "^0.3.0", optional = true}
google-adk = {version = "^0.1.0", optional = true, python = "^3.9"}
litellm = {version = "^1.55.0", optional = true}
together = {version = "^1.0.0", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
pytest-asyncio = "^0.21.0"
black = "^23.0.0"
ruff = "^0.1.0"
mypy = "^1.0.0"
pre-commit = "^3.0.0"

[tool.poetry.extras]
dev = [
    "pytest",
    "pytest-cov", 
    "pytest-asyncio",
    "black",
    "ruff",
    "mypy",
    "pre-commit"
]
server = [
    "fastapi",
    "uvicorn",
    "websockets",
    "sse-starlette",
    "python-multipart"
]
adk = [
    "google-generativeai",
    "google-genai",
    "google-adk",
    "litellm",
    "together"
]
all = [
    "fastapi",
    "uvicorn", 
    "websockets",
    "sse-starlette",
    "python-multipart",
    "google-generativeai",
    "google-genai",
    "google-adk", 
    "litellm",
    "together",
    "pytest",
    "pytest-cov",
    "pytest-asyncio", 
    "black",
    "ruff",
    "mypy",
    "pre-commit"
]

[tool.poetry.scripts]
kubiya-workflow = "kubiya_workflow_sdk.cli:main"

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"